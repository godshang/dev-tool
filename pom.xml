<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.godshang</groupId>
    <artifactId>dev-tool</artifactId>
    <version>1.0.0</version>

    <properties>
        <app.launcher>com.github.godshang.devtool.Launcher</app.launcher>
        <app.module>godshang.devtool</app.module>
        <app.name>DevTool</app.name>
        <app.version>${project.version}</app.version>
        <!-- application dependencies that will be included as JAR files -->
        <build.dependenciesDir>${project.build.directory}${file.separator}dependencies</build.dependenciesDir>
        <!-- application dependencies that will be bundled into runtime image -->
        <build.platformModulesDir>${project.build.directory}${file.separator}platform-modules</build.platformModulesDir>
        <!-- jpackage generated application image root -->
        <build.package.appImageDir>${project.build.directory}${file.separator}app-image</build.package.appImageDir>
        <!-- jlink generated runtime image -->
        <build.package.runtimeImageDir>${project.build.directory}${file.separator}runtime-image</build.package.runtimeImageDir>
        <!-- contains package scripts after filtering and placeholder replacement -->
        <build.package.scriptsDir>${project.build.directory}${file.separator}package-scripts</build.package.scriptsDir>
        <!-- jpackage directory for temp artifacts -->
        <build.package.tempDir>${project.build.directory}${file.separator}package-temp</build.package.tempDir>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <java.version>17</java.version>
        <javafx.version>20</javafx.version>
        <atlantafx.version>2.0.1</atlantafx.version>
        <ikonli.version>12.3.1</ikonli.version>
        <gson.version>2.10.1</gson.version>
        <jackson.version>2.12.3</jackson.version>
        <poi.version>4.1.0</poi.version>
        <javapoet.version>1.13.0</javapoet.version>
        <lombok.version>1.18.32</lombok.version>
        <cron.utils.version>9.2.0</cron.utils.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.openjfx</groupId>-->
        <!--            <artifactId>javafx-fxml</artifactId>-->
        <!--            <version>${javafx.version}</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.6</version>
        </dependency>

        <dependency>
            <groupId>io.github.mkpaz</groupId>
            <artifactId>atlantafx-base</artifactId>
            <version>${atlantafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>${ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-feather-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-material2-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-boxicons-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-properties</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup</groupId>
            <artifactId>javapoet</artifactId>
            <version>${javapoet.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>eu.mihosoft.monacofx</groupId>-->
        <!--            <artifactId>monacofx</artifactId>-->
        <!--            <version>0.0.8</version>-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <groupId>org.openjfx</groupId>-->
        <!--                    <artifactId>*</artifactId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>com.cronutils</groupId>
            <artifactId>cron-utils</artifactId>
            <version>${cron.utils.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>3.5.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.deblockt</groupId>
            <artifactId>json-diff</artifactId>
            <version>1.1.0</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!-- filter resources -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application.properties</include>
                </includes>
            </resource>
            <!-- copy icons -->
            <resource>
                <directory>icons</directory>
                <targetPath>assets${file.separator}icons</targetPath>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>icons</directory>
                <targetPath>${project.build.directory}${file.separator}icons</targetPath>
                <filtering>false</filtering>
            </resource>
            <!-- copy and filter build scripts -->
            <resource>
                <directory>src/package-scripts</directory>
                <filtering>true</filtering>
                <targetPath>${build.package.scriptsDir}</targetPath>
            </resource>
        </resources>

        <plugins>
            <!-- compile SCSS -->
            <plugin>
                <groupId>us.hebi.sass</groupId>
                <artifactId>sass-cli-maven-plugin</artifactId>
                <version>1.0.1</version>
                <configuration>
                    <sassVersion>1.54.5</sassVersion>
                    <args>
                        <arg>
                            ${project.basedir}/src/main/resources/assets/styles/scss/index.scss:${project.build.directory}/classes/assets/styles/index.css
                        </arg>
                        <arg>--no-source-map</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <id>run-sass</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.6</version>
                <configuration>
                    <executable>${java.home}/bin/java</executable>
                    <mainClass>${app.launcher}</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <!-- skip installation to the local repository -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- skip module deployment -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <!-- copy all dependencies that won't be included into runtime image -->
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.dependenciesDir}</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <excludeGroupIds>org.openjfx</excludeGroupIds>
                        </configuration>
                    </execution>
                    <!-- copy platform dependencies that will be included into runtime image -->
                    <execution>
                        <id>copy-openjfx</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${build.platformModulesDir}</outputDirectory>
                            <includeGroupIds>org.openjfx</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <!-- copy application JAR file to the dependencies -->
                <configuration>
                    <outputDirectory>${build.dependenciesDir}</outputDirectory>
                    <archive>
                        <manifest>
                            <mainClass>com.github.godshang.devtool.Launcher</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.github.wiverson</groupId>
                <artifactId>jtoolprovider-plugin</artifactId>
                <version>1.0.34</version>
                <executions>
                    <!-- create custom JRE image -->
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jlink</toolName>
                            <addModules>
                                java.base,java.logging,java.naming,jdk.localedata,jdk.zipfs,jdk.charsets,java.desktop,java.prefs,java.compiler,javafx.controls,javafx.media,javafx.web,javafx.swing<!--,javafx.fxml-->
                            </addModules>
                            <modulePath>${build.platformModulesDir}</modulePath>
                            <output>${build.package.runtimeImageDir}</output>
                            <args>
                                <!-- additional options to shrink resulting image even more -->
                                <arg>--compress=2</arg>
                                <arg>--include-locales=en</arg>
                                <arg>--no-header-files</arg>
                                <arg>--no-man-pages</arg>
                                <arg>--strip-debug</arg>
                                <arg>--verbose</arg>
                            </args>
                        </configuration>
                    </execution>
                    <!-- create application image (includes JRE plus application JARs and resources) -->
                    <execution>
                        <id>create-app-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>java-tool</goal>
                        </goals>
                        <configuration>
                            <toolName>jpackage</toolName>
                            <removeDirectories>${build.package.tempDir}</removeDirectories>
                            <args>
                                <arg>@${build.package.scriptsDir}${file.separator}args-base.txt</arg>
                                <arg>@${build.package.scriptsDir}${file.separator}args-app-image.txt</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openjfx</groupId>
                        <artifactId>javafx-maven-plugin</artifactId>
                        <configuration>
                            <options>
                                <option>-Datlantafx.mode=dev</option>
                            </options>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux-active</id>
            <activation>
                <os>
                    <!--<family>unix</family>-->
                    <family>Linux</family>
                </os>
            </activation>
            <properties>
                <app.icon>${project.build.directory}${file.separator}icons${file.separator}app-icon.png</app.icon>
                <app.type>app-image</app.type>
            </properties>
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <app.icon>${project.build.directory}${file.separator}icons${file.separator}app-icon.icns</app.icon>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.github.wiverson</groupId>
                        <artifactId>jtoolprovider-plugin</artifactId>
                        <version>1.0.34</version>
                        <executions>
                            <execution>
                                <id>create-msi-installer</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jpackage</toolName>
                                    <removeDirectories>${build.package.tempDir}</removeDirectories>
                                    <args>
                                        <arg>@${build.package.scriptsDir}${file.separator}args-base.txt</arg>
                                        <arg>@${build.package.scriptsDir}${file.separator}args-mac-dmg.txt</arg>
                                    </args>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <app.icon>${project.build.directory}${file.separator}icons${file.separator}app-icon.ico</app.icon>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.github.wiverson</groupId>
                        <artifactId>jtoolprovider-plugin</artifactId>
                        <version>1.0.34</version>
                        <executions>
                            <execution>
                                <id>create-msi-installer</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jpackage</toolName>
                                    <removeDirectories>${build.package.tempDir}</removeDirectories>
                                    <args>
                                        <arg>@${build.package.scriptsDir}${file.separator}args-base.txt</arg>
                                        <arg>@${build.package.scriptsDir}${file.separator}args-windows-msi.txt</arg>
                                    </args>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>