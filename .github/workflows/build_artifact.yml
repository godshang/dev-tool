name: build_artifact

#on:
#  release:
#    types: [ published ]

on:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        os: [ windows-latest ]
    steps:
      - name: Download Wix
        uses: i3h/download-release-asset@v1
        with:
          owner: wixtoolset
          repo: wix3
          tag: wix3141rtm
          file: wix314-binaries.zip
      - name: Decompress Wix
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: wix314-binaries.zip
          pathTarget: ./target/wix
      - name: Add Wix to Path
        run: echo "$HOME/target/wix" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 22
          distribution: liberica
          java-package: jdk
          cache: maven
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml -Pwindows-active
      - name: Zip the AppImage
        run: Compress-Archive -Path target/app-image/DevTool -Destination target/app-image/DevTool-${{ github.ref_name }}-${{ matrix.os }}.zip
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: |
            ./target/app-image/*.zip
            ./target/app-image/*.msi

  build-mac:
    runs-on: macos-12
    strategy:
      matrix:
        os: [ macos-12 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 22
          distribution: liberica
          java-package: jdk
          cache: maven
      - name: 'Build with Maven (macOS No Signing)'
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        if: ${{ env.MACOS_CERTIFICATE == null }}
        run: mvn -B clean package --file pom.xml -Pmac-active
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-binary
          path: |
            ./target/app-image/*.dmg

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 22
          distribution: liberica
          java-package: jdk
          cache: maven
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml -Plinux-active
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: |
            ./target/app-image/*.deb

  upload-release-assets:
    runs-on: ubuntu-latest
    needs: [ build-windows, build-mac, build-linux ]
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          path: build
          name: windows-binary
      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          path: build
          name: macos-binary
      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          path: build
          name: linux-binary
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/*.zip
            build/*.msi
            build/*.dmg
            build/*.deb
